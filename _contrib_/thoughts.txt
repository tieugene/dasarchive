= DasAchive =
== Отображение =
  * [Фасета]: ярлык/ярлык
== выбор ==
С обычными полями ввода не получается нифейхоа хорошего.
Никак.

Поэтому - граф и только. singleclick - свернуть/развернуть, doubleclick - выбрать.
Выделены: выбранные узлы и ребра между ними (от корня)
Не выделены - недоступные
Полувыделены - доступные фасеты.

Т.е. узлы/ребра могут быть в состояниях:
* Выделен - на пути root => выбранные ярлыки
* Доступен - не на пути, но непосредственно в фасетах, подчиненных узлам на пути
* Недоступен - не на пути и не ...
(что с корневыми делать - пока непонятно; допусти таки root == фасета)

Можно даже не динамический граф, а статический (svg). Тогда ввод данных - в скрытом поле перечислены id выбранных узлов.
* перед редактированием:
-- рисуем граф
-- расцвечиваем как надо узлы и рёбра (class)
-- после загрузки - вешаем на узлы onclick()
-- и где-то храним внутреннее представление графа
* после редактирования - сливаем скрытое input field
* по reset - восстанавливаем status quo
* onclick > POST/GET > action (server-side) > repaint:
* Выделено (т.е. стоит на пути root => выбранные)
-- Leaf:
	* удолить из выбранных лист и листы подчиненных фасет
	* [добавить в выбранные родительский ярлык]
-- Branch:
	* удолить из выбранных подчиненные листы и листы подчиненных этому branch фасет
	* [добавить в выбранные родительский ярлык]
-- Facet:
	* удолить из выбранных все подчиненные ярлыки
* Невыделено (если доступно):
-- Leaf: (deselect+select, наследование, множественность)
	* ...
-- Branch:
	* ...
-- Facet:
	* <nothing to do>
= Repaint =

= Idea =
Сказать "имеет такой-то признак" - мало. Надо сказать "...из".
